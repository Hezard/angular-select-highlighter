{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-material.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/highlighter-filter/highlighter-filter.component.html","webpack:///src/app/components/highlighter-filter/highlighter-filter.component.ts","webpack:///src/app/components/highlighter/highlighter.component.html","webpack:///src/app/components/highlighter/highlighter.component.ts","webpack:///src/app/constants/index.ts","webpack:///src/app/services/dom.service.ts","webpack:///src/app/services/error-handler.service.ts","webpack:///src/app/services/highlighter.service.ts","webpack:///src/app/store/app.actions.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/store/app.selectors.ts","webpack:///src/environments/environment.ts","webpack:///src/hmr.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppMaterialModule","AppComponent","store","colors","$color","pipe","$text","$selections","$filterColors","$filteredItems","text","target","value","dispatch","selections","highlightColor","filterColors","AppModule","HighlighterFilterComponent","HighlighterComponent","highlighterService","domService","content","selectionText","changes","data","updateContent","currentTarget","color","selection","window","getSelection","anchorNode","anchorOffset","focusOffset","toString","length","contains","empty","currentIndex","findSelectionIndex","childNodes","isBackward","isSelectionBackward","item","variant","start","end","collection","updateSelections","emit","defaultText","DomService","position","compareDocumentPosition","focusNode","Node","DOCUMENT_POSITION_PRECEDING","nodeList","nodes","slice","call","node","firstChild","sibling","nextSibling","nodeType","ErrorHandlerService","snackBar","zone","error","showError","production","console","message","run","open","duration","verticalPosition","horizontalPosition","HighlighterService","exclude","reduce","arr","curr","before","substr","after","result","concat","sort","a","b","children","index","PREFIX","TEXT_CHANGE","SELECTIONS_CHANGE","FILTERS_CHANGE","COLOR_CHANGE","RESET","colorChange","textChange","filtersChange","selectionsChange","resetAll","initialState","state","appReducer","reducer","action","getSelections","root","getColor","getText","getFilters","filters","filter","includes","getFilteredSelections","environment","hmr","hmrBootstrap","bootstrap","ngModule","hot","accept","mod","dispose","appRef","injector","get","elements","components","map","c","location","nativeElement","makeVisible","destroy","log","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  exports: [\n    MatCardModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatSnackBarModule\n  ]\n})\nexport class AppMaterialModule {}\n","<div class=\"app\">\n  <header class=\"app-header\">\n    <mat-toolbar color=\"primary\">\n      <h1 class=\"app-logo m-auto\">Angular Select Highlighter</h1>\n    </mat-toolbar>\n  </header>\n  <section class=\"app-content\">\n    <div class=\"d-flex justify-content-center mb-3\">\n      <mat-button-toggle-group\n        appearance=\"legacy\"\n        [value]=\"$color | async\"\n        name=\"highlightColor\"\n        (change)=\"onHighlightColorChange($event)\"\n        aria-label=\"Highlight Color\"\n      >\n        <mat-button-toggle *ngFor=\"let color of colors\" [value]=\"color.value\">{{ color.value }}</mat-button-toggle>\n      </mat-button-toggle-group>\n\n      <button class=\"ml-2\" (click)=\"onEraser()\" mat-stroked-button color=\"primary\">Eraser</button>\n      <button class=\"ml-2\" (click)=\"onReset()\" mat-stroked-button color=\"warn\">Reset</button>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field class=\"w-100\">\n          <mat-label>Enter text</mat-label>\n          <textarea\n            matInput\n            [value]=\"$text | async\"\n            (input)=\"onTextChange($event)\"\n            cdkTextareaAutosize\n            #autosize=\"cdkTextareaAutosize\"\n            cdkAutosizeMinRows=\"18\"\n            cdkAutosizeMaxRows=\"25\"\n          ></textarea>\n        </mat-form-field>\n      </div>\n      <div class=\"col d-flex pb-2\">\n        <app-highlighter\n          [color]=\"$color | async\"\n          [text]=\"$text | async\"\n          [data]=\"$selections | async\"\n          (selectionText)=\"onTextSelection($event)\"\n        ></app-highlighter>\n      </div>\n    </div>\n    <h4>Filters:</h4>\n\n    <mat-button-toggle-group\n      class=\"mb-3\"\n      appearance=\"legacy\"\n      multiple\n      name=\"filterColor\"\n      [value]=\"$filterColors | async\"\n      (change)=\"onFilterColorChange($event)\"\n      aria-label=\"Filter Color\"\n    >\n      <mat-button-toggle *ngFor=\"let color of colors\" [value]=\"color.value\">{{ color.value }}</mat-button-toggle>\n    </mat-button-toggle-group>\n    <app-highlighter-filter [data]=\"$filteredItems | async\"></app-highlighter-filter>\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { colors } from './constants';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { selectionsChange, colorChange, filtersChange, resetAll, textChange } from './store/app.actions';\nimport { getColor, getText, getSelections, getFilters, getFilteredSelections } from './store/app.selectors';\nimport { SelectionItem, AppState, Color } from './models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  colors: Color[] = colors;\n\n  $color: Observable<string>;\n  $text: Observable<string>;\n  $selections: Observable<SelectionItem[]>;\n  $filterColors: Observable<string[]>;\n  $filteredItems: Observable<SelectionItem[]>;\n\n  constructor(private store: Store<AppState>) {}\n\n  ngOnInit(): void {\n    this.$color = this.store.pipe(select(getColor));\n    this.$text = this.store.pipe(select(getText));\n    this.$selections = this.store.pipe(select(getSelections));\n    this.$filterColors = this.store.pipe(select(getFilters));\n    this.$filteredItems = this.store.pipe(select(getFilteredSelections));\n  }\n\n  onTextChange({ target: { value: text } }) {\n    this.store.dispatch(textChange({ text }));\n  }\n\n  onTextSelection(selections) {\n    this.store.dispatch(selectionsChange({ selections }));\n  }\n\n  onHighlightColorChange({ value: highlightColor }) {\n    this.store.dispatch(colorChange({ highlightColor }));\n  }\n\n  onFilterColorChange({ value: filterColors }) {\n    this.store.dispatch(filtersChange({ filterColors }));\n  }\n\n  onEraser() {\n    this.store.dispatch(colorChange({ highlightColor: null }));\n  }\n\n  onReset() {\n    this.store.dispatch(resetAll());\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppMaterialModule } from './app-material.module';\nimport { HighlighterComponent, HighlighterFilterComponent } from './components';\nimport { appReducer } from './store';\nimport { environment } from 'src/environments/environment';\nimport { ErrorHandlerService } from './services/error-handler.service';\n\n@NgModule({\n  declarations: [AppComponent, HighlighterComponent, HighlighterFilterComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppMaterialModule,\n    StoreModule.forRoot({ root: appReducer }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production // Restrict extension to log-only mode\n    })\n  ],\n  providers: [{ provide: ErrorHandler, useClass: ErrorHandlerService }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","<ng-container *ngFor=\"let item of data\">\n  <div ngClass=\"highlighter__selection highlighter__selection--{{ item.variant }}\">\n    {{ item.value }}\n  </div>\n</ng-container>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionItem } from 'src/app/models';\n\n@Component({\n  selector: 'app-highlighter-filter',\n  templateUrl: './highlighter-filter.component.html',\n  styleUrls: ['./highlighter-filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HighlighterFilterComponent {\n  @Input() data: SelectionItem[];\n}\n","<ng-container *ngIf=\"text\">\n  <ng-container *ngFor=\"let item of content\">\n    <ng-container *ngIf=\"!item['id']; else selectionNode\">{{ item }}</ng-container>\n    <ng-template #selectionNode>\n      <span ngClass=\"highlighter__selection--{{ item['variant'] }}\">{{ item['value'] }}</span>\n    </ng-template>\n  </ng-container>\n</ng-container>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport uuid from 'uuid';\n\nimport { SelectionItem } from '../../models';\nimport { HighlighterService, DomService } from 'src/app/services';\n\n@Component({\n  selector: 'app-highlighter',\n  templateUrl: './highlighter.component.html',\n  styleUrls: ['./highlighter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HighlighterComponent implements OnChanges {\n  public content: Array<string | SelectionItem> = null;\n\n  constructor(private highlighterService: HighlighterService, private domService: DomService) {}\n\n  @Input() color: string;\n  @Input() text: string;\n  @Input() data: SelectionItem[];\n\n  @Output() selectionText = new EventEmitter<SelectionItem[]>();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.text || changes.data) {\n      this.content = this.highlighterService.updateContent(this.data, this.text);\n    }\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onSelectionText({ currentTarget }: { currentTarget: HTMLElement }): void {\n    const { color, data } = this;\n    const selection: Selection = window.getSelection();\n    const { anchorNode, anchorOffset, focusOffset } = selection;\n    const value = selection.toString();\n\n    // skip outer events of container and empty selections\n    if ((!data && !data.length && !color) || !value || !currentTarget.contains(anchorNode)) {\n      selection.empty();\n      return;\n    }\n\n    // find && update indexes if we replace existing highlight elements\n    const currentIndex: number = this.domService.findSelectionIndex(currentTarget.childNodes, selection);\n    const isBackward: boolean = this.domService.isSelectionBackward(selection);\n    const item: SelectionItem = {\n      id: uuid(),\n      value,\n      variant: color,\n      ...(isBackward\n        ? {\n            start: focusOffset + currentIndex,\n            end: focusOffset + currentIndex + value.length\n          }\n        : {\n            start: anchorOffset + currentIndex,\n            end: anchorOffset + currentIndex + value.length\n          })\n    };\n\n    const collection: SelectionItem[] = this.highlighterService.updateSelections(data, item, !color);\n\n    this.selectionText.emit(collection);\n    selection.empty();\n  }\n}\n","import { Color } from '../models';\n\nexport const colors: Color[] = [\n  { id: 0, value: 'red' },\n  { id: 1, value: 'green' },\n  { id: 2, value: 'yellow' }\n];\n\nexport const defaultText =\n  // tslint:disable-next-line: max-line-length\n  'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomService {\n  isSelectionBackward(selection: Selection): boolean {\n    const position = selection.anchorNode.compareDocumentPosition(selection.focusNode);\n\n    return (\n      (!position && selection.anchorOffset > selection.focusOffset) || position === Node.DOCUMENT_POSITION_PRECEDING\n    );\n  }\n\n  findSelectionIndex(nodeList: NodeListOf<ChildNode>, { anchorNode, focusNode }: Selection): number {\n    let currentIndex = 0;\n    const nodes = [].slice.call(nodeList);\n\n    for (const node of nodes) {\n      const firstChild = node.firstChild;\n      const sibling = node.nextSibling;\n\n      // skip comments nodes for safety iteration\n      if (node.nodeType === 8) {\n        continue;\n      }\n\n      if (\n        (firstChild && firstChild === anchorNode) ||\n        node === anchorNode ||\n        (firstChild && firstChild === focusNode) ||\n        node === focusNode\n      ) {\n        break;\n      }\n\n      currentIndex += (firstChild && firstChild.length) || node.length;\n\n      if (\n        sibling === anchorNode ||\n        sibling === focusNode ||\n        (sibling && sibling.firstChild === anchorNode) ||\n        (sibling && sibling.firstChild === focusNode)\n      ) {\n        break;\n      }\n    }\n    return currentIndex;\n  }\n}\n","import { Injectable, ErrorHandler, NgZone } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService implements ErrorHandler {\n  constructor(private snackBar: MatSnackBar, private zone: NgZone) {}\n\n  public handleError(error: Error) {\n    if (error instanceof Error) {\n      this.showError('An Error occured. Try to reload page.');\n\n      if (environment.production) {\n        console.error(error);\n      }\n    }\n  }\n\n  public showError(message: string) {\n    this.zone.run(() => {\n      this.snackBar.open(message, null, {\n        duration: 2000,\n        verticalPosition: 'top',\n        horizontalPosition: 'end'\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport uuid from 'uuid';\nimport { SelectionItem } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighlighterService {\n  public updateSelections(selections: SelectionItem[], target: SelectionItem, exclude = false): SelectionItem[] {\n    return selections\n      .reduce((arr, curr) => {\n        if (target.start <= curr.start && target.end >= curr.end) {\n          return [...arr];\n        }\n\n        // target inside existing selection\n        if (target.start > curr.start && target.end < curr.end) {\n          const before: SelectionItem = {\n            id: uuid(),\n            start: curr.start,\n            end: target.start,\n            value: curr.value.substr(0, target.start - curr.start),\n            variant: curr.variant\n          };\n          const after: SelectionItem = {\n            id: uuid(),\n            start: target.end,\n            end: curr.end,\n            value: curr.value.substr(target.end - curr.end),\n            variant: curr.variant\n          };\n          return [...arr, before, after];\n        }\n\n        // target overlaped at the beginig\n        if (target.start <= curr.start && target.end < curr.end && target.end > curr.start) {\n          const result: SelectionItem = {\n            id: uuid(),\n            start: target.end,\n            end: curr.end,\n            value: curr.value.substr(target.end - curr.end),\n            variant: curr.variant\n          };\n          return [...arr, result];\n        }\n\n        // target overlaped at the end\n        if (target.end >= curr.end && target.start > curr.start && target.start < curr.end) {\n          const result: SelectionItem = {\n            id: uuid(),\n            start: curr.start,\n            end: target.start,\n            value: curr.value.substr(0, target.start - curr.start),\n            variant: curr.variant\n          };\n          return [...arr, result];\n        }\n        return [...arr, curr];\n      }, [])\n      .concat(exclude ? [] : target)\n      .sort((a, b) => a.start - b.start);\n  }\n\n  public updateContent(data: SelectionItem[], text: string): Array<string | SelectionItem> {\n    const length: number = data && data.length;\n    let position = 0;\n    let content: string = text;\n\n    if (length) {\n      return data.reduce((children: Array<string | SelectionItem>, node: SelectionItem, index) => {\n        const before: string | [] = content.substr(0, node.start - position) || [];\n        content = content.substr(node.end - position);\n        const after: string | [] = (index === length - 1 && content) || [];\n\n        position = node.end;\n\n        return children\n          .concat(before)\n          .concat(node)\n          .concat(after);\n      }, []);\n    }\n    return [text];\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { SelectionItem } from '../models';\n\nconst PREFIX = 'APPLICATION';\n\nconst TEXT_CHANGE = `${PREFIX}/TEXT_CHANGE`;\nconst SELECTIONS_CHANGE = `${PREFIX}//SELECTIONS_CHANGE`;\nconst FILTERS_CHANGE = `${PREFIX}//FILTERS_CHANGE`;\nconst COLOR_CHANGE = `${PREFIX}//COLOR_CHANGE`;\nconst RESET = `${PREFIX}//RESET`;\n\nexport const colorChange = createAction(COLOR_CHANGE, props<{ highlightColor: string }>());\nexport const textChange = createAction(TEXT_CHANGE, props<{ text: string }>());\nexport const filtersChange = createAction(FILTERS_CHANGE, props<{ filterColors: string[] }>());\nexport const selectionsChange = createAction(SELECTIONS_CHANGE, props<{ selections: SelectionItem[] }>());\nexport const resetAll = createAction(RESET);\n","import { Action, createReducer, on } from '@ngrx/store';\nimport * as AppActions from './app.actions';\nimport { State } from '../models';\nimport { defaultText } from '../constants';\n\nexport const initialState: State = {\n  highlightColor: null,\n  filterColors: [],\n  text: defaultText,\n  selections: []\n};\n\nconst appReducer = createReducer(\n  initialState,\n  on(AppActions.colorChange, (state, { highlightColor }) => ({ ...state, highlightColor })),\n  on(AppActions.textChange, (state, { text }) => ({ ...state, selections: [], text })),\n  on(AppActions.selectionsChange, (state, { selections }) => ({ ...state, selections: [...selections] })),\n  on(AppActions.filtersChange, (state, { filterColors }) => ({ ...state, filterColors: [...filterColors] })),\n  on(AppActions.resetAll, () => ({ ...initialState }))\n);\n\nexport default function reducer(state: State | undefined, action: Action) {\n  return appReducer(state, action);\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../models';\n\nexport const getSelections = ({ root }: AppState) => root.selections;\nexport const getColor = ({ root }: AppState) => root.highlightColor;\nexport const getText = ({ root }: AppState) => root.text;\nexport const getFilters = ({ root }: AppState) => root.filterColors;\nexport const getFilteredSelections = createSelector(getFilters, getSelections, (filters, selections) => {\n  return selections.filter(item => {\n    return filters.includes(item.variant);\n  });\n});\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModuleRef, ApplicationRef } from '@angular/core';\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport const hmrBootstrap = (module: any, bootstrap: () => Promise<NgModuleRef<any>>) => {\n  let ngModule: NgModuleRef<any>;\n  module.hot.accept();\n  bootstrap().then(mod => (ngModule = mod));\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map(c => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { hmrBootstrap } from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);\n\nif (environment.hmr) {\n  // tslint:disable-next-line: no-string-literal\n  if (module['hot']) {\n    hmrBootstrap(module, bootstrap);\n  } else {\n    console.error('HMR is not enabled for webpack-dev-server!');\n    console.log('Are you using the --hmr flag for ng serve?');\n  }\n} else {\n  bootstrap().catch(err => console.log(err));\n}\n"]}